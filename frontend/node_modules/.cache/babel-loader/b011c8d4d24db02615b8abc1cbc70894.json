{"ast":null,"code":"import _slicedToArray from \"/Users/noamrubin/Documents/web-projects/alteos/tech-challenge/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/noamrubin/Documents/web-projects/alteos/tech-challenge/client/src/components/Search.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Employee from \"../components/Employee\";\n\nconst Search = props => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchInput = _useState2[0],\n        setSearchInput = _useState2[1]; // const [employees, setEmployees] = useState([]);\n  // const [matchList, setMatchList] = useState([]);\n\n\n  const employees = props.data;\n\n  const handleChange = event => {\n    // change state of search input based on input searchbar\n    setSearchInput(event.target.value);\n    console.log(\"search term:\", searchInput); // create empty list for matches with searchterm\n\n    let matchList = []; // iterate over employees\n\n    employees.forEach(employee => {\n      // if name includes searchinput\n      if (employee.name.toLowerCase().includes(searchInput.toLowerCase()) || employee.eyeColor.includes(searchInput.toLowerCase()) || employee.company.toLowerCase().includes(searchInput.toLowerCase()) || employee.gender.includes(searchInput.toLowerCase()) || employee.email.includes(searchInput.toLowerCase()) || employee.address.includes(searchInput.toLowerCase()) || employee.phone.includes(searchInput)) {\n        console.log(employee); // add to match-list\n\n        matchList.push(employee);\n      }\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"didmounT\");\n  }, []);\n  useEffect(() => {\n    console.log(\"didmount\");\n  }, [searchInput]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Searchbar\"), React.createElement(\"form\", {\n    className: \"input-searchbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Search\"), React.createElement(\"input\", {\n    className: \"input-field\",\n    type: \"text\",\n    name: \"search\",\n    value: searchInput,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, employees.map(employee => {\n    return React.createElement(\"div\", {\n      key: employee._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, employee.name));\n  })));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/noamrubin/Documents/web-projects/alteos/tech-challenge/client/src/components/Search.js"],"names":["React","useState","useEffect","axios","Employee","Search","props","searchInput","setSearchInput","employees","data","handleChange","event","target","value","console","log","matchList","forEach","employee","name","toLowerCase","includes","eyeColor","company","gender","email","address","phone","push","map","_id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAAA,oBACgBL,QAAQ,CAAC,EAAD,CADxB;AAAA;AAAA,QACfM,WADe;AAAA,QACFC,cADE,kBAEtB;AACA;;;AAEA,QAAMC,SAAS,GAAGH,KAAK,CAACI,IAAxB;;AAEA,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B;AACAJ,IAAAA,cAAc,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BT,WAA5B,EAH4B,CAK5B;;AACA,QAAIU,SAAS,GAAG,EAAhB,CAN4B,CAQ5B;;AACAR,IAAAA,SAAS,CAACS,OAAV,CAAkBC,QAAQ,IAAI;AAC5B;AACA,UACEA,QAAQ,CAACC,IAAT,CAAcC,WAAd,GAA4BC,QAA5B,CAAqCf,WAAW,CAACc,WAAZ,EAArC,KACAF,QAAQ,CAACI,QAAT,CAAkBD,QAAlB,CAA2Bf,WAAW,CAACc,WAAZ,EAA3B,CADA,IAEAF,QAAQ,CAACK,OAAT,CAAiBH,WAAjB,GAA+BC,QAA/B,CAAwCf,WAAW,CAACc,WAAZ,EAAxC,CAFA,IAGAF,QAAQ,CAACM,MAAT,CAAgBH,QAAhB,CAAyBf,WAAW,CAACc,WAAZ,EAAzB,CAHA,IAIAF,QAAQ,CAACO,KAAT,CAAeJ,QAAf,CAAwBf,WAAW,CAACc,WAAZ,EAAxB,CAJA,IAKAF,QAAQ,CAACQ,OAAT,CAAiBL,QAAjB,CAA0Bf,WAAW,CAACc,WAAZ,EAA1B,CALA,IAMAF,QAAQ,CAACS,KAAT,CAAeN,QAAf,CAAwBf,WAAxB,CAPF,EAQE;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ,EADA,CAGA;;AACAF,QAAAA,SAAS,CAACY,IAAV,CAAeV,QAAf;AACD;AACF,KAhBD;AAiBD,GA1BD;;AA4BAjB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAd,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,GAFQ,EAEN,CAACT,WAAD,CAFM,CAAT;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,KAAK,EAAEA,WAJT;AAKE,IAAA,QAAQ,EAAEI,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,SAAS,CAACqB,GAAV,CAAcX,QAAQ,IAAI;AACzB,WACE;AAAK,MAAA,GAAG,EAAEA,QAAQ,CAACY,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKZ,QAAQ,CAACC,IAAd,CADF,CADF;AAKD,GANA,CADH,CAZF,CADF;AAwBD,CAnED;;AAqEA,eAAef,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Employee from \"../components/Employee\";\n\nconst Search = props => {\n  const [searchInput, setSearchInput] = useState(\"\");\n  // const [employees, setEmployees] = useState([]);\n  // const [matchList, setMatchList] = useState([]);\n\n  const employees = props.data;\n\n  const handleChange = event => {\n    // change state of search input based on input searchbar\n    setSearchInput(event.target.value);\n    console.log(\"search term:\", searchInput);\n\n    // create empty list for matches with searchterm\n    let matchList = [];\n\n    // iterate over employees\n    employees.forEach(employee => {\n      // if name includes searchinput\n      if (\n        employee.name.toLowerCase().includes(searchInput.toLowerCase()) ||\n        employee.eyeColor.includes(searchInput.toLowerCase()) ||\n        employee.company.toLowerCase().includes(searchInput.toLowerCase()) ||\n        employee.gender.includes(searchInput.toLowerCase()) ||\n        employee.email.includes(searchInput.toLowerCase()) ||\n        employee.address.includes(searchInput.toLowerCase()) ||\n        employee.phone.includes(searchInput)\n      ) {\n        console.log(employee);\n\n        // add to match-list\n        matchList.push(employee);\n      }\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"didmounT\");\n  }, []);\n\n  useEffect(() => {\n    console.log(\"didmount\");\n  }, [searchInput]);\n\n  return (\n    <div>\n      <h1>Searchbar</h1>\n      <form className=\"input-searchbar\">\n        <label htmlFor=\"search\">Search</label>\n        <input\n          className=\"input-field\"\n          type=\"text\"\n          name=\"search\"\n          value={searchInput}\n          onChange={handleChange}\n        />\n      </form>\n      <ul>\n        {employees.map(employee => {\n          return (\n            <div key={employee._id}>\n              <h3>{employee.name}</h3>\n            </div>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}