{"ast":null,"code":"import _slicedToArray from \"/Users/noamrubin/Documents/web-projects/alteos/tech-challenge/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/noamrubin/Documents/web-projects/alteos/tech-challenge/client/src/components/Search.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Employee from \"../components/Employee\";\n\nconst Search = props => {\n  console.log(props);\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchInput = _useState2[0],\n        setSearchInput = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        employees = _useState4[0],\n        setEmployees = _useState4[1]; // const [matchList, setMatchList] = useState([]);\n\n\n  const handleChange = event => {\n    // change state of search input based on input searchbar\n    setSearchInput(event.target.value);\n    console.log(\"search term:\", searchInput); // create empty list for matches with searchterm\n\n    let matchList = []; // iterate over employees\n    // searchResults.forEach(employee => {\n    //   // if name includes searchinput\n    //   if (employee.name.toLowerCase().includes(searchInput.toLowerCase())) {\n    //     console.log(employee);\n    //     // add to match-list\n    //     matchList.push(employee);\n    //   }\n    // });\n  };\n\n  useEffect(() => {\n    console.log(\"didmounT\");\n  }, []);\n  useEffect(() => {\n    console.log(\"didmount\");\n  }, [searchInput]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Searchbar\"), React.createElement(\"form\", {\n    className: \"input-searchbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Search\"), React.createElement(\"input\", {\n    className: \"input-field\",\n    type: \"text\",\n    name: \"search\",\n    value: searchInput,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/noamrubin/Documents/web-projects/alteos/tech-challenge/client/src/components/Search.js"],"names":["React","useState","useEffect","axios","Employee","Search","props","console","log","searchInput","setSearchInput","employees","setEmployees","handleChange","event","target","value","matchList"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AADsB,oBAEgBL,QAAQ,CAAC,EAAD,CAFxB;AAAA;AAAA,QAEfQ,WAFe;AAAA,QAEFC,cAFE;;AAAA,qBAGYT,QAAQ,CAAC,EAAD,CAHpB;AAAA;AAAA,QAGfU,SAHe;AAAA,QAGJC,YAHI,kBAItB;;;AAEA,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B;AACAJ,IAAAA,cAAc,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BC,WAA5B,EAH4B,CAK5B;;AACA,QAAIQ,SAAS,GAAG,EAAhB,CAN4B,CAQ5B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACD,GAlBD;;AAoBAf,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,GAFQ,EAEN,CAACC,WAAD,CAFM,CAAT;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,KAAK,EAAEA,WAJT;AAKE,IAAA,QAAQ,EAAEI,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAwBD,CA1DD;;AA4DA,eAAeR,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Employee from \"../components/Employee\";\n\nconst Search = props => {\n  console.log(props);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [employees, setEmployees] = useState([]);\n  // const [matchList, setMatchList] = useState([]);\n\n  const handleChange = event => {\n    // change state of search input based on input searchbar\n    setSearchInput(event.target.value);\n    console.log(\"search term:\", searchInput);\n\n    // create empty list for matches with searchterm\n    let matchList = [];\n\n    // iterate over employees\n    // searchResults.forEach(employee => {\n    //   // if name includes searchinput\n    //   if (employee.name.toLowerCase().includes(searchInput.toLowerCase())) {\n    //     console.log(employee);\n\n    //     // add to match-list\n    //     matchList.push(employee);\n    //   }\n    // });\n  };\n\n  useEffect(() => {\n    console.log(\"didmounT\");\n  }, []);\n\n  useEffect(() => {\n    console.log(\"didmount\");\n  }, [searchInput]);\n\n  return (\n    <div>\n      <h1>Searchbar</h1>\n      <form className=\"input-searchbar\">\n        <label htmlFor=\"search\">Search</label>\n        <input\n          className=\"input-field\"\n          type=\"text\"\n          name=\"search\"\n          value={searchInput}\n          onChange={handleChange}\n        />\n      </form>\n      <ul>\n        {/* {searchResults.map(employee => {\n          return (\n            <div key={employee._id}>\n              <h3>{employee.name}</h3>\n            </div>\n          );\n        })} */}\n      </ul>\n    </div>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}