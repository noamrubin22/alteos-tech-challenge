{"ast":null,"code":"import _slicedToArray from \"/Users/noamrubin/Documents/web-projects/alteos/tech-challenge/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/noamrubin/Documents/web-projects/alteos/tech-challenge/client/src/components/Search.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Employee from \"../components/Employee\";\n\nconst Search = props => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchInput = _useState2[0],\n        setSearchInput = _useState2[1];\n\n  const _useState3 = useState(props.data),\n        _useState4 = _slicedToArray(_useState3, 2),\n        employeess = _useState4[0],\n        setEmployeess = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        matchList = _useState6[0],\n        setMatchList = _useState6[1];\n\n  const employees = props.data;\n  let match = [];\n\n  const handleChange = event => {\n    // change state of search input based on input searchbar\n    setSearchInput(event.target.value);\n    console.log(\"search term:\", searchInput);\n  };\n\n  useEffect(() => {\n    console.log(\"didmounT\");\n  }, []);\n  useEffect(() => {\n    console.log(\"didmount searchinput\");\n    /* check if searchterm matches the dataset properties */\n    // iterate over employees\n\n    employees.forEach(employee => {\n      // console.log(employee);\n      // if properties include searchinput\n      if (employee.name.toLowerCase().includes(searchInput.toLowerCase() || employee.eyeColor.includes(searchInput.toLowerCase()))) {\n        console.log(\"MATCHHHHHHHHH\", searchInput, employee); // add them to the new state\n\n        match.push(employee);\n        setMatchList(match);\n        console.log(employeess);\n      } // employee.company.toLowerCase().includes(searchInput.toLowerCase()) ||\n      // employee.gender.includes(searchInput.toLowerCase()) ||\n      // employee.email.includes(searchInput.toLowerCase()) ||\n      // employee.address.includes(searchInput.toLowerCase()) ||\n      // employee.phone\n      //   .replace(/\\s/g, \"\")\n      //   .includes(searchInput.replace(/\\s/g, \"\"))\n      // ) {\n      // console.log(employee);\n      // add to match-list\n      // matchList.push(employee);\n      // if (employee !=)\n      //     setMatchList([...matchList, employee]);\n      //     for (let i = 0; i < matchList.length; i++) {\n      //       console.log(matchList[i]);\n      //     }\n      //     console.log(\"matchlist:\", matchList[0]);\n      //     console.log(typeof matchList);\n      //     // display employee\n      //   } else {\n      //     console.log(\"nothing found\");\n      //   }\n\n    }); // setMatchList([]);\n  }, [searchInput]);\n  useEffect(() => {}, [employees, matchList]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Searchbar\"), React.createElement(\"form\", {\n    className: \"input-searchbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Search\"), React.createElement(\"input\", {\n    className: \"input-field\",\n    type: \"text\",\n    name: \"search\",\n    value: searchInput,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(Employee, {\n    data: matchList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/noamrubin/Documents/web-projects/alteos/tech-challenge/client/src/components/Search.js"],"names":["React","useState","useEffect","Employee","Search","props","searchInput","setSearchInput","data","employeess","setEmployeess","matchList","setMatchList","employees","match","handleChange","event","target","value","console","log","forEach","employee","name","toLowerCase","includes","eyeColor","push"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAAA,oBACgBJ,QAAQ,CAAC,EAAD,CADxB;AAAA;AAAA,QACfK,WADe;AAAA,QACFC,cADE;;AAAA,qBAEcN,QAAQ,CAACI,KAAK,CAACG,IAAP,CAFtB;AAAA;AAAA,QAEfC,UAFe;AAAA,QAEHC,aAFG;;AAAA,qBAGYT,QAAQ,CAAC,EAAD,CAHpB;AAAA;AAAA,QAGfU,SAHe;AAAA,QAGJC,YAHI;;AAItB,QAAMC,SAAS,GAAGR,KAAK,CAACG,IAAxB;AAEA,MAAIM,KAAK,GAAG,EAAZ;;AAEA,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B;AACAT,IAAAA,cAAc,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4Bd,WAA5B;AACD,GAJD;;AAMAJ,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAlB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AAEA;AACA;;AACAP,IAAAA,SAAS,CAACQ,OAAV,CAAkBC,QAAQ,IAAI;AAC5B;AACA;AACA,UACEA,QAAQ,CAACC,IAAT,CACGC,WADH,GAEGC,QAFH,CAGInB,WAAW,CAACkB,WAAZ,MACEF,QAAQ,CAACI,QAAT,CAAkBD,QAAlB,CAA2BnB,WAAW,CAACkB,WAAZ,EAA3B,CAJN,CADF,EAOE;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6Bd,WAA7B,EAA0CgB,QAA1C,EADA,CAEA;;AACAR,QAAAA,KAAK,CAACa,IAAN,CAAWL,QAAX;AACAV,QAAAA,YAAY,CAACE,KAAD,CAAZ;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYX,UAAZ;AACD,OAhB2B,CAkB5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,KAzCD,EALc,CA+Cd;AACD,GAhDQ,EAgDN,CAACH,WAAD,CAhDM,CAAT;AAkDAJ,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,CAACW,SAAD,EAAYF,SAAZ,CAAX,CAAT;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,KAAK,EAAEL,WAJT;AAKE,IAAA,QAAQ,EAAES,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,EAaE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEJ,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF;AAiBD,CAtFD;;AAwFA,eAAeP,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Employee from \"../components/Employee\";\n\nconst Search = props => {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [employeess, setEmployeess] = useState(props.data);\n  const [matchList, setMatchList] = useState([]);\n  const employees = props.data;\n\n  let match = [];\n\n  const handleChange = event => {\n    // change state of search input based on input searchbar\n    setSearchInput(event.target.value);\n    console.log(\"search term:\", searchInput);\n  };\n\n  useEffect(() => {\n    console.log(\"didmounT\");\n  }, []);\n\n  useEffect(() => {\n    console.log(\"didmount searchinput\");\n\n    /* check if searchterm matches the dataset properties */\n    // iterate over employees\n    employees.forEach(employee => {\n      // console.log(employee);\n      // if properties include searchinput\n      if (\n        employee.name\n          .toLowerCase()\n          .includes(\n            searchInput.toLowerCase() ||\n              employee.eyeColor.includes(searchInput.toLowerCase())\n          )\n      ) {\n        console.log(\"MATCHHHHHHHHH\", searchInput, employee);\n        // add them to the new state\n        match.push(employee);\n        setMatchList(match);\n        console.log(employeess);\n      }\n\n      // employee.company.toLowerCase().includes(searchInput.toLowerCase()) ||\n      // employee.gender.includes(searchInput.toLowerCase()) ||\n      // employee.email.includes(searchInput.toLowerCase()) ||\n      // employee.address.includes(searchInput.toLowerCase()) ||\n      // employee.phone\n      //   .replace(/\\s/g, \"\")\n      //   .includes(searchInput.replace(/\\s/g, \"\"))\n      // ) {\n      // console.log(employee);\n\n      // add to match-list\n      // matchList.push(employee);\n      // if (employee !=)\n      //     setMatchList([...matchList, employee]);\n      //     for (let i = 0; i < matchList.length; i++) {\n      //       console.log(matchList[i]);\n      //     }\n      //     console.log(\"matchlist:\", matchList[0]);\n      //     console.log(typeof matchList);\n      //     // display employee\n      //   } else {\n      //     console.log(\"nothing found\");\n      //   }\n    });\n    // setMatchList([]);\n  }, [searchInput]);\n\n  useEffect(() => {}, [employees, matchList]);\n  return (\n    <div>\n      <h1>Searchbar</h1>\n      <form className=\"input-searchbar\">\n        <label htmlFor=\"search\">Search</label>\n        <input\n          className=\"input-field\"\n          type=\"text\"\n          name=\"search\"\n          value={searchInput}\n          onChange={handleChange}\n        />\n      </form>\n      {/* make a tenary here: if matchlist then show employee*/}\n      <Employee data={matchList} />\n    </div>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}