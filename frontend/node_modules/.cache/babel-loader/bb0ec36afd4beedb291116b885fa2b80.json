{"ast":null,"code":"import _slicedToArray from \"/Users/noamrubin/Documents/web-projects/alteos/tech-challenge/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/noamrubin/Documents/web-projects/alteos/tech-challenge/client/src/components/Search.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Employee from \"../components/Employee\";\n\nconst Search = props => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchInput = _useState2[0],\n        setSearchInput = _useState2[1];\n\n  const _useState3 = useState(props.data),\n        _useState4 = _slicedToArray(_useState3, 2),\n        searchResults = _useState4[0],\n        setSearchResults = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        employees = _useState6[0],\n        setEmployees = _useState6[1];\n\n  console.log(searchResults);\n\n  const handleChange = event => {\n    setSearchInput(event.target.value);\n    console.log(\"search term:\", searchInput);\n    let matchList = [];\n    searchResults.forEach(employee => {\n      if (employee.name.toLowerCase().includes(searchInput.toLowerCase())) {\n        console.log(employee);\n        matchList.push(employee);\n      }\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"didmounT\");\n  }, []);\n  useEffect(() => {\n    console.log(\"didmount\");\n  }, [searchInput, searchResults]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Searchbar\"), React.createElement(\"form\", {\n    className: \"input-searchbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Search\"), React.createElement(\"input\", {\n    className: \"input-field\",\n    type: \"text\",\n    name: \"search\",\n    value: searchInput,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, searchResults.map(employee => {\n    return React.createElement(\"div\", {\n      key: employee._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, employee.name));\n  })));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/noamrubin/Documents/web-projects/alteos/tech-challenge/client/src/components/Search.js"],"names":["React","useState","useEffect","axios","Employee","Search","props","searchInput","setSearchInput","data","searchResults","setSearchResults","employees","setEmployees","console","log","handleChange","event","target","value","matchList","forEach","employee","name","toLowerCase","includes","push","map","_id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAAA,oBACgBL,QAAQ,CAAC,EAAD,CADxB;AAAA;AAAA,QACfM,WADe;AAAA,QACFC,cADE;;AAAA,qBAEoBP,QAAQ,CAACK,KAAK,CAACG,IAAP,CAF5B;AAAA;AAAA,QAEfC,aAFe;AAAA,QAEAC,gBAFA;;AAAA,qBAGYV,QAAQ,CAAC,EAAD,CAHpB;AAAA;AAAA,QAGfW,SAHe;AAAA,QAGJC,YAHI;;AAItBC,EAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ;;AAEA,QAAMM,YAAY,GAAGC,KAAK,IAAI;AAC5BT,IAAAA,cAAc,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BR,WAA5B;AAEA,QAAIa,SAAS,GAAG,EAAhB;AACAV,IAAAA,aAAa,CAACW,OAAd,CAAsBC,QAAQ,IAAI;AAChC,UAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAd,GAA4BC,QAA5B,CAAqClB,WAAW,CAACiB,WAAZ,EAArC,CAAJ,EAAqE;AACnEV,QAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACAF,QAAAA,SAAS,CAACM,IAAV,CAAeJ,QAAf;AACD;AACF,KALD;AAMD,GAXD;;AAaApB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,GAFQ,EAEN,CAACR,WAAD,EAAcG,aAAd,CAFM,CAAT;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,KAAK,EAAEH,WAJT;AAKE,IAAA,QAAQ,EAAES,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,aAAa,CAACiB,GAAd,CAAkBL,QAAQ,IAAI;AAC7B,WACE;AAAK,MAAA,GAAG,EAAEA,QAAQ,CAACM,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKN,QAAQ,CAACC,IAAd,CADF,CADF;AAKD,GANA,CADH,CAZF,CADF;AAwBD,CAnDD;;AAqDA,eAAelB,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Employee from \"../components/Employee\";\n\nconst Search = props => {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [searchResults, setSearchResults] = useState(props.data);\n  const [employees, setEmployees] = useState([]);\n  console.log(searchResults);\n\n  const handleChange = event => {\n    setSearchInput(event.target.value);\n    console.log(\"search term:\", searchInput);\n\n    let matchList = [];\n    searchResults.forEach(employee => {\n      if (employee.name.toLowerCase().includes(searchInput.toLowerCase())) {\n        console.log(employee);\n        matchList.push(employee);\n      }\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"didmounT\");\n  }, []);\n\n  useEffect(() => {\n    console.log(\"didmount\");\n  }, [searchInput, searchResults]);\n\n  return (\n    <div>\n      <h1>Searchbar</h1>\n      <form className=\"input-searchbar\">\n        <label htmlFor=\"search\">Search</label>\n        <input\n          className=\"input-field\"\n          type=\"text\"\n          name=\"search\"\n          value={searchInput}\n          onChange={handleChange}\n        />\n      </form>\n      <ul>\n        {searchResults.map(employee => {\n          return (\n            <div key={employee._id}>\n              <h3>{employee.name}</h3>\n            </div>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}