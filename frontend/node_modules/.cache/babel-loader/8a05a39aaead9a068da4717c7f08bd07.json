{"ast":null,"code":"import _slicedToArray from \"/Users/noamrubin/Documents/web-projects/alteos/tech-challenge/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/noamrubin/Documents/web-projects/alteos/tech-challenge/client/src/components/Search.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Employee from \"../components/Employee\";\nimport \"./Search.css\";\nimport axios from \"axios\";\n\nconst Search = props => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchInput = _useState2[0],\n        setSearchInput = _useState2[1];\n\n  const _useState3 = useState(props.data),\n        _useState4 = _slicedToArray(_useState3, 2),\n        matchList = _useState4[0],\n        setMatchList = _useState4[1];\n\n  console.log(matchList);\n  const employees = props.data;\n  console.log(employees);\n  useEffect(() => {\n    console.log(\"didmounT\");\n  }, [matchList]);\n\n  const getData = () => {\n    axios.get(\"/api/\").then(response => {\n      console.log(\"data is taken\");\n      setMatchList(response.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    getData(); // setMatchList(employees);\n\n    console.log(\"loo\");\n  }, []);\n\n  const handleChange = event => {\n    // change state of search input based on input searchbar\n    setSearchInput(event.target.value);\n    console.log(\"search term:\", searchInput);\n  };\n  /* match between employees properties and searchterm is being checked each time searchterm changes */\n\n\n  useEffect(() => {\n    console.log(\"didmount searchinput\");\n    let match = []; // iterate over employees\n\n    employees.forEach(employee => {\n      // if properties include searchinput\n      if (employee.name.toLowerCase().includes(searchInput.toLowerCase()) || employee.age.toString().includes(searchInput) || employee.gender.includes(searchInput) && employee.gender.indexOf(searchInput) === 0 || employee.eyeColor.includes(searchInput.toLowerCase()) || employee.company.toLowerCase().includes(searchInput.toLowerCase()) || employee.email.includes(searchInput.toLowerCase()) || employee.phone.replace(/[+()-\\s]/g, \"\").includes(searchInput.replace(/[+()-\\s]/g, \"\")) || employee.address.replace(/\\s/g, \"\").includes(searchInput.replace(/\\s/g, \"\"))) {\n        // update the state\n        match.push(employee);\n        setMatchList(match);\n      } // otherwise update the state without them\n\n\n      setMatchList(match);\n    });\n  }, [searchInput]);\n  useEffect(() => {\n    console.log(\"matchList updated\");\n  }, [matchList]);\n  return React.createElement(\"div\", {\n    className: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"input-searchbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Search: \"), React.createElement(\"input\", {\n    className: \"input-field\",\n    type: \"text\",\n    name: \"search\",\n    value: searchInput,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(Employee, {\n    data: matchList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/noamrubin/Documents/web-projects/alteos/tech-challenge/client/src/components/Search.js"],"names":["React","useState","useEffect","Employee","axios","Search","props","searchInput","setSearchInput","data","matchList","setMatchList","console","log","employees","getData","get","then","response","catch","err","handleChange","event","target","value","match","forEach","employee","name","toLowerCase","includes","age","toString","gender","indexOf","eyeColor","company","email","phone","replace","address","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Employee from \"../components/Employee\";\nimport \"./Search.css\";\nimport axios from \"axios\";\n\nconst Search = props => {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [matchList, setMatchList] = useState(props.data);\n  console.log(matchList);\n  const employees = props.data;\n  console.log(employees);\n\n  useEffect(() => {\n    console.log(\"didmounT\");\n  }, [matchList]);\n\n  const getData = () => {\n    axios\n      .get(\"/api/\")\n      .then(response => {\n        console.log(\"data is taken\");\n        setMatchList(response.data);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  useEffect(() => {\n    getData();\n    // setMatchList(employees);\n    console.log(\"loo\");\n  }, []);\n\n  const handleChange = event => {\n    // change state of search input based on input searchbar\n    setSearchInput(event.target.value);\n    console.log(\"search term:\", searchInput);\n  };\n\n  /* match between employees properties and searchterm is being checked each time searchterm changes */\n  useEffect(() => {\n    console.log(\"didmount searchinput\");\n    let match = [];\n    // iterate over employees\n    employees.forEach(employee => {\n      // if properties include searchinput\n      if (\n        employee.name.toLowerCase().includes(searchInput.toLowerCase()) ||\n        employee.age.toString().includes(searchInput) ||\n        (employee.gender.includes(searchInput) &&\n          employee.gender.indexOf(searchInput) === 0) ||\n        employee.eyeColor.includes(searchInput.toLowerCase()) ||\n        employee.company.toLowerCase().includes(searchInput.toLowerCase()) ||\n        employee.email.includes(searchInput.toLowerCase()) ||\n        employee.phone\n          .replace(/[+()-\\s]/g, \"\")\n          .includes(searchInput.replace(/[+()-\\s]/g, \"\")) ||\n        employee.address\n          .replace(/\\s/g, \"\")\n          .includes(searchInput.replace(/\\s/g, \"\"))\n      ) {\n        // update the state\n        match.push(employee);\n        setMatchList(match);\n      }\n      // otherwise update the state without them\n      setMatchList(match);\n    });\n  }, [searchInput]);\n\n  useEffect(() => {\n    console.log(\"matchList updated\");\n  }, [matchList]);\n\n  return (\n    <div className=\"search\">\n      <form className=\"input-searchbar\">\n        <label htmlFor=\"search\">Search: </label>\n        <input\n          className=\"input-field\"\n          type=\"text\"\n          name=\"search\"\n          value={searchInput}\n          onChange={handleChange}\n        />\n      </form>\n      <Employee data={matchList} />\n    </div>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}