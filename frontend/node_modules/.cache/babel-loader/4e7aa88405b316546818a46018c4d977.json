{"ast":null,"code":"import _slicedToArray from \"/Users/noamrubin/Documents/web-projects/alteos/tech-challenge/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/noamrubin/Documents/web-projects/alteos/tech-challenge/client/src/components/Search.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Employee from \"../components/Employee\";\nimport \"./Search.css\";\nimport axios from \"axios\";\n\nconst Search = props => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchInput = _useState2[0],\n        setSearchInput = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        filtered = _useState4[0],\n        setFiltered = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        employees = _useState6[0],\n        setEmployees = _useState6[1];\n\n  useEffect(() => {\n    console.log(\"component did mount\");\n    axios.get(\"/api\").then(response => {\n      setFiltered([...response.data]);\n      setEmployees([...response.data]);\n    });\n  }, []);\n\n  const handleChange = event => {\n    setSearchInput(event.target.value);\n  };\n  /* match between employees properties and searchterm is being checked each time searchterm changes */\n\n\n  useEffect(() => {\n    console.log(\"didmount searchinput\");\n    let match = [];\n    employees.forEach(employee => {\n      if (employee.name.toLowerCase().includes(searchInput.toLowerCase()) || employee.age.toString().includes(searchInput) || employee.gender.includes(searchInput) && employee.gender.indexOf(searchInput) === 0 || employee.eyeColor.includes(searchInput.toLowerCase()) || employee.company.toLowerCase().includes(searchInput.toLowerCase()) || employee.email.includes(searchInput.toLowerCase()) || employee.phone.replace(/[+()-\\s]/g, \"\").includes(searchInput.replace(/[+()-\\s]/g, \"\")) || employee.address.replace(/\\s/g, \"\").includes(searchInput.replace(/\\s/g, \"\"))) {\n        match.push(employee);\n        setFiltered(match);\n        console.log(\"match\", match);\n      } // otherwise, update the state without them\n\n\n      setFiltered(match);\n    });\n  }, [searchInput]);\n  useEffect(() => {\n    console.log(\"Filtered updated\");\n  }, [filtered]);\n  return React.createElement(\"div\", {\n    className: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"input-searchbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Search: \"), React.createElement(\"input\", {\n    className: \"input-field\",\n    type: \"text\",\n    name: \"search\",\n    value: searchInput,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(Employee, {\n    data: filtered,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/noamrubin/Documents/web-projects/alteos/tech-challenge/client/src/components/Search.js"],"names":["React","useState","useEffect","Employee","axios","Search","props","searchInput","setSearchInput","filtered","setFiltered","employees","setEmployees","console","log","get","then","response","data","handleChange","event","target","value","match","forEach","employee","name","toLowerCase","includes","age","toString","gender","indexOf","eyeColor","company","email","phone","replace","address","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Employee from \"../components/Employee\";\nimport \"./Search.css\";\nimport axios from \"axios\";\n\nconst Search = props => {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [filtered, setFiltered] = useState([]);\n  const [employees, setEmployees] = useState([]);\n\n  useEffect(() => {\n    console.log(\"component did mount\");\n    axios.get(\"/api\").then(response => {\n      setFiltered([...response.data]);\n      setEmployees([...response.data]);\n    });\n  }, []);\n\n  const handleChange = event => {\n    setSearchInput(event.target.value);\n  };\n\n  /* match between employees properties and searchterm is being checked each time searchterm changes */\n  useEffect(() => {\n    console.log(\"didmount searchinput\");\n    let match = [];\n    employees.forEach(employee => {\n      if (\n        employee.name.toLowerCase().includes(searchInput.toLowerCase()) ||\n        employee.age.toString().includes(searchInput) ||\n        (employee.gender.includes(searchInput) &&\n          employee.gender.indexOf(searchInput) === 0) ||\n        employee.eyeColor.includes(searchInput.toLowerCase()) ||\n        employee.company.toLowerCase().includes(searchInput.toLowerCase()) ||\n        employee.email.includes(searchInput.toLowerCase()) ||\n        employee.phone\n          .replace(/[+()-\\s]/g, \"\")\n          .includes(searchInput.replace(/[+()-\\s]/g, \"\")) ||\n        employee.address\n          .replace(/\\s/g, \"\")\n          .includes(searchInput.replace(/\\s/g, \"\"))\n      ) {\n        match.push(employee);\n        setFiltered(match);\n        console.log(\"match\", match);\n      }\n      // otherwise, update the state without them\n      setFiltered(match);\n    });\n  }, [searchInput]);\n\n  useEffect(() => {\n    console.log(\"Filtered updated\");\n  }, [filtered]);\n\n  return (\n    <div className=\"search\">\n      <form className=\"input-searchbar\">\n        <label htmlFor=\"search\">Search: </label>\n        <input\n          className=\"input-field\"\n          type=\"text\"\n          name=\"search\"\n          value={searchInput}\n          onChange={handleChange}\n        />\n      </form>\n      <Employee data={filtered} />\n    </div>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}