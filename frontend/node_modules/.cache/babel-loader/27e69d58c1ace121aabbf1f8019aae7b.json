{"ast":null,"code":"import _slicedToArray from \"/Users/noamrubin/Documents/web-projects/alteos/tech-challenge/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/noamrubin/Documents/web-projects/alteos/tech-challenge/client/src/components/Search.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Employee from \"../components/Employee\";\n\nconst Search = props => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchInput = _useState2[0],\n        setSearchInput = _useState2[1]; // const [employees, setEmployees] = useState([]);\n\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        matchList = _useState4[0],\n        setMatchList = _useState4[1];\n\n  const employees = props.data;\n\n  const handleChange = event => {\n    // change state of search input based on input searchbar\n    setSearchInput(event.target.value);\n    console.log(\"search term:\", searchInput); // create empty list for matches with searchterm\n    // let matchList = [];\n    // iterate over employees\n\n    employees.forEach(employee => {\n      // if properties include searchinput\n      if (employee.name.toLowerCase().includes(searchInput.toLowerCase()) || employee.eyeColor.includes(searchInput.toLowerCase()) || employee.company.toLowerCase().includes(searchInput.toLowerCase()) || employee.gender.includes(searchInput.toLowerCase()) || employee.email.includes(searchInput.toLowerCase()) || employee.address.includes(searchInput.toLowerCase()) || employee.phone.includes(searchInput)) {\n        // console.log(employee);\n        // add to match-list\n        // matchList.push(employee);\n        // setMatchList([...matchList, employee]);\n        setMatchList(employee);\n        console.log(\"matchlist:\", matchList); // display employee\n      }\n    }); // setMatchList([]);\n  };\n\n  useEffect(() => {\n    console.log(\"didmounT\");\n  }, []);\n  useEffect(() => {\n    console.log(\"didmount\");\n  }, [searchInput]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Searchbar\"), React.createElement(\"form\", {\n    className: \"input-searchbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Search\"), React.createElement(\"input\", {\n    className: \"input-field\",\n    type: \"text\",\n    name: \"search\",\n    value: searchInput,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/noamrubin/Documents/web-projects/alteos/tech-challenge/client/src/components/Search.js"],"names":["React","useState","useEffect","axios","Employee","Search","props","searchInput","setSearchInput","matchList","setMatchList","employees","data","handleChange","event","target","value","console","log","forEach","employee","name","toLowerCase","includes","eyeColor","company","gender","email","address","phone"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAAA,oBACgBL,QAAQ,CAAC,EAAD,CADxB;AAAA;AAAA,QACfM,WADe;AAAA,QACFC,cADE,kBAEtB;;;AAFsB,qBAGYP,QAAQ,CAAC,EAAD,CAHpB;AAAA;AAAA,QAGfQ,SAHe;AAAA,QAGJC,YAHI;;AAKtB,QAAMC,SAAS,GAAGL,KAAK,CAACM,IAAxB;;AAEA,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B;AACAN,IAAAA,cAAc,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BX,WAA5B,EAH4B,CAK5B;AACA;AAEA;;AACAI,IAAAA,SAAS,CAACQ,OAAV,CAAkBC,QAAQ,IAAI;AAC5B;AACA,UACEA,QAAQ,CAACC,IAAT,CAAcC,WAAd,GAA4BC,QAA5B,CAAqChB,WAAW,CAACe,WAAZ,EAArC,KACAF,QAAQ,CAACI,QAAT,CAAkBD,QAAlB,CAA2BhB,WAAW,CAACe,WAAZ,EAA3B,CADA,IAEAF,QAAQ,CAACK,OAAT,CAAiBH,WAAjB,GAA+BC,QAA/B,CAAwChB,WAAW,CAACe,WAAZ,EAAxC,CAFA,IAGAF,QAAQ,CAACM,MAAT,CAAgBH,QAAhB,CAAyBhB,WAAW,CAACe,WAAZ,EAAzB,CAHA,IAIAF,QAAQ,CAACO,KAAT,CAAeJ,QAAf,CAAwBhB,WAAW,CAACe,WAAZ,EAAxB,CAJA,IAKAF,QAAQ,CAACQ,OAAT,CAAiBL,QAAjB,CAA0BhB,WAAW,CAACe,WAAZ,EAA1B,CALA,IAMAF,QAAQ,CAACS,KAAT,CAAeN,QAAf,CAAwBhB,WAAxB,CAPF,EAQE;AACA;AAEA;AACA;AACA;AACAG,QAAAA,YAAY,CAACU,QAAD,CAAZ;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BT,SAA1B,EAPA,CASA;AACD;AACF,KArBD,EAT4B,CA+B5B;AACD,GAhCD;;AAkCAP,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAhB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,GAFQ,EAEN,CAACX,WAAD,CAFM,CAAT;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,KAAK,EAAEA,WAJT;AAKE,IAAA,QAAQ,EAAEM,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAwBD,CAzED;;AA2EA,eAAeR,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Employee from \"../components/Employee\";\n\nconst Search = props => {\n  const [searchInput, setSearchInput] = useState(\"\");\n  // const [employees, setEmployees] = useState([]);\n  const [matchList, setMatchList] = useState([]);\n\n  const employees = props.data;\n\n  const handleChange = event => {\n    // change state of search input based on input searchbar\n    setSearchInput(event.target.value);\n    console.log(\"search term:\", searchInput);\n\n    // create empty list for matches with searchterm\n    // let matchList = [];\n\n    // iterate over employees\n    employees.forEach(employee => {\n      // if properties include searchinput\n      if (\n        employee.name.toLowerCase().includes(searchInput.toLowerCase()) ||\n        employee.eyeColor.includes(searchInput.toLowerCase()) ||\n        employee.company.toLowerCase().includes(searchInput.toLowerCase()) ||\n        employee.gender.includes(searchInput.toLowerCase()) ||\n        employee.email.includes(searchInput.toLowerCase()) ||\n        employee.address.includes(searchInput.toLowerCase()) ||\n        employee.phone.includes(searchInput)\n      ) {\n        // console.log(employee);\n\n        // add to match-list\n        // matchList.push(employee);\n        // setMatchList([...matchList, employee]);\n        setMatchList(employee);\n        console.log(\"matchlist:\", matchList);\n\n        // display employee\n      }\n    });\n    // setMatchList([]);\n  };\n\n  useEffect(() => {\n    console.log(\"didmounT\");\n  }, []);\n\n  useEffect(() => {\n    console.log(\"didmount\");\n  }, [searchInput]);\n\n  return (\n    <div>\n      <h1>Searchbar</h1>\n      <form className=\"input-searchbar\">\n        <label htmlFor=\"search\">Search</label>\n        <input\n          className=\"input-field\"\n          type=\"text\"\n          name=\"search\"\n          value={searchInput}\n          onChange={handleChange}\n        />\n      </form>\n      <ul>\n        {/* {matchList.forEach(employee => {\n          return (\n            <div key={employee._id}>\n              <h3>{employee.name}</h3>\n            </div>\n          );\n        })} */}\n      </ul>\n    </div>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}